<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!--

    This module contains setup classes for Hibernate and JPA, providing a test harness.

    The TransactionManagerSetup creates a JTA-compatible database connection pool, and
    starts an in-memory temporary database for testing, see the Javadoc for more details.

    The JPASetup creates a JPA EntityManagerFactory and bootstraps Hibernate. HibernateSetup
    is a native API bootstrap version.

    The TransactionManagerTest and its subclass JPATest are the unit test harness. Create a
    subclass of JPATest to get access to the JPA environment in a unit test. For native-only
    API, use HibernateTest.

    -->

    <!-- ##################################################################################################### -->

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.jpwh</groupId>
        <artifactId>jpwh</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <!-- ##################################################################################################### -->

    <artifactId>environment</artifactId>
    <packaging>jar</packaging>

    <!-- ##################################################################################################### -->

    <name>Environment</name>

    <!-- ##################################################################################################### -->

    <reporting>
        <excludeDefaults>true</excludeDefaults>
    </reporting>

    <!-- ##################################################################################################### -->

    <build>
        <plugins>
            <!-- No tests in this module-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <!-- ##################################################################################################### -->

    <dependencies>

        <dependency>
            <groupId>org.jpwh</groupId>
            <artifactId>shared</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Everything is tested with TestNG, avoid JUnit for integration tests! -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <exclusions>
                <!-- No thank you -->
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Logging, everyone's favorite -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
        </dependency>

        <!--
        In this environment, use a JTA-compatible resource/transaction manager instead of
        a simple dumb JDBC connection pool. Bitronix is good: http://btm.codehaus.org/
         -->
        <dependency>
            <groupId>org.codehaus.btm</groupId>
            <artifactId>btm</artifactId>
            <version>${btm.version}</version>
        </dependency>

        <!-- Java Persistence API and implementation -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <!-- For JDK 8 support
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-java8</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        -->

        <!-- Bean Validation API and implementation -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate.validator.version}</version>
        </dependency>
        <!-- This needs EL -->
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <version>${javax-el.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.el</artifactId>
            <version>${javax-el.version}</version>
        </dependency>

        <!-- Envers for temporal data -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-envers</artifactId>
            <version>${hibernate.version}</version>
        </dependency>

        <!-- EHCache for second-level caching -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
            <version>${hibernate.version}</version>
        </dependency>

        <!-- H2 rocks for small-scale deployment -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
        </dependency>

        <!-- Some stored procedure testing requires MySQL -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.28</version>
        </dependency>

        <!-- Stored procedures returning REF_CURSOR on PostgreSQL -->
        <dependency>
            <groupId>org.postgresql</groupId>
        	<artifactId>postgresql</artifactId>
            <version>42.1.4</version>
        </dependency>

        <!-- Oracle JDBC driver has to be installed locally somewhere. -->
        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc</artifactId>
            <version>12.2.0.1.0</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/../lib/ojdbc8.jar</systemPath>
        </dependency>

    </dependencies>

</project>
